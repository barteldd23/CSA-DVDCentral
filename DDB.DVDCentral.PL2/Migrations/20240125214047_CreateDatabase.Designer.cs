// <auto-generated />
using System;
using DDB.DVDCentral.PL2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDB.DVDCentral.PL2.Migrations
{
    [DbContext(typeof(DVDCentralEntities))]
    [Migration("20240125214047_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tblCart");

                    b.HasData(
                        new
                        {
                            Id = new Guid("447d9c4e-a25f-4814-bc2b-1a089f2161d7"),
                            UserId = new Guid("d199bf78-3bb3-40dd-8f6d-06d6bdc5b404")
                        },
                        new
                        {
                            Id = new Guid("3660f6ea-a990-48fb-a110-18f5e5269b15"),
                            UserId = new Guid("ad65c547-7df1-4085-97d1-c9c3327d608d")
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCartItem");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1d736d5-6781-4d1d-b788-a20dfd6baa15"),
                            CartId = new Guid("447d9c4e-a25f-4814-bc2b-1a089f2161d7"),
                            MovieId = new Guid("2c1073c4-d98a-4929-8541-77e619e9e48f"),
                            Quantity = 1
                        },
                        new
                        {
                            Id = new Guid("9ede93ed-f379-4268-a94a-4cfde7d9b69b"),
                            CartId = new Guid("447d9c4e-a25f-4814-bc2b-1a089f2161d7"),
                            MovieId = new Guid("3440a337-f353-42d7-8227-81a7e2737925"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("b13699f5-0c56-46dd-a74d-9557195ccd17"),
                            CartId = new Guid("3660f6ea-a990-48fb-a110-18f5e5269b15"),
                            MovieId = new Guid("3440a337-f353-42d7-8227-81a7e2737925"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZIP")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.HasKey("Id")
                        .HasName("PK_tblCustomer_Id");

                    b.ToTable("tblCustomer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("13940c48-f87e-420f-8329-aecb37dfef68"),
                            Address = "453 Oak Street",
                            City = "Fond du Lac",
                            FirstName = "Steve",
                            LastName = "Marin",
                            Phone = "9205879797",
                            State = "WI",
                            UserId = new Guid("d199bf78-3bb3-40dd-8f6d-06d6bdc5b404"),
                            ZIP = "54935"
                        },
                        new
                        {
                            Id = new Guid("c919a719-b175-40a0-95c3-b9a965dfbc0a"),
                            Address = "987 Willow Road",
                            City = "Slinger",
                            FirstName = "John",
                            LastName = "Doro",
                            Phone = "9202623345",
                            State = "WI",
                            UserId = new Guid("ad65c547-7df1-4085-97d1-c9c3327d608d"),
                            ZIP = "56495"
                        },
                        new
                        {
                            Id = new Guid("8abb067e-6b0f-409c-8e08-f5d8b5354c80"),
                            Address = "159 Johnson Avenue",
                            City = "Allenton",
                            FirstName = "Brian",
                            LastName = "Foote",
                            Phone = "9202623415",
                            State = "WI",
                            UserId = new Guid("d85b818c-1be6-4be1-b925-d9af249d83bf"),
                            ZIP = "53142"
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblDirector_Id");

                    b.ToTable("tblDirector", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("886dc06f-dc36-4aad-a81a-a474e6dc47bd"),
                            FirstName = "John",
                            LastName = "Avildsen"
                        },
                        new
                        {
                            Id = new Guid("4c090eef-2e71-4986-aafd-8313d208c581"),
                            FirstName = "Steven",
                            LastName = "Spielberg"
                        },
                        new
                        {
                            Id = new Guid("983cd154-bbb4-4b74-94ae-c167b0ab2128"),
                            FirstName = "Rob",
                            LastName = "Reiner"
                        },
                        new
                        {
                            Id = new Guid("fca5d738-a87f-432a-a95b-d5e968073b79"),
                            FirstName = "George",
                            LastName = "Lucas"
                        },
                        new
                        {
                            Id = new Guid("7eba7696-e529-4341-bab7-59a60fce9f45"),
                            FirstName = "Clint",
                            LastName = "Eastwood"
                        },
                        new
                        {
                            Id = new Guid("73091ae1-8ead-41ff-8b49-5f26eaf23a5f"),
                            FirstName = "Other",
                            LastName = "Other"
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblFormat_Id");

                    b.ToTable("tblFormat", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a231d4ba-102d-4bc0-a608-d90e8bf74a82"),
                            Description = "VHS"
                        },
                        new
                        {
                            Id = new Guid("b5a83b31-05dd-47ee-9bd1-2f1574cd2120"),
                            Description = "DVD"
                        },
                        new
                        {
                            Id = new Guid("f17f9043-d5d6-4618-88f9-ad9b48549f9f"),
                            Description = "Blu-Ray"
                        },
                        new
                        {
                            Id = new Guid("f2e7f900-353b-41c5-ad18-952f430906e8"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblGenre_Id");

                    b.ToTable("tblGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("67c6a687-292d-4502-8369-4ece917e3877"),
                            Description = "Comedy"
                        },
                        new
                        {
                            Id = new Guid("73fc274f-826b-4668-9070-09ef9d9afd78"),
                            Description = "Action"
                        },
                        new
                        {
                            Id = new Guid("31e9baf7-adfa-4b1d-865d-0ff6bff4fbbb"),
                            Description = "Sci-Fi"
                        },
                        new
                        {
                            Id = new Guid("179e337f-afa9-44dc-8322-44a76c2ce106"),
                            Description = "Horror"
                        },
                        new
                        {
                            Id = new Guid("e16e3d25-5e87-4cb5-ad3b-9cbf616ac330"),
                            Description = "Romance"
                        },
                        new
                        {
                            Id = new Guid("95c0abd3-6b8b-492c-a395-b9e2bd867415"),
                            Description = "Documentary"
                        },
                        new
                        {
                            Id = new Guid("ae2ce9c8-3a7c-4985-86d0-c68d5b86e630"),
                            Description = "Musical"
                        },
                        new
                        {
                            Id = new Guid("a9893ca8-7f18-42cb-8ef0-2c2f8308ecf4"),
                            Description = "Mystery"
                        },
                        new
                        {
                            Id = new Guid("de4c5b06-dde6-4d14-9f9e-5895b8550ade"),
                            Description = "Western"
                        },
                        new
                        {
                            Id = new Guid("ff869789-dd03-498d-ba9b-1fde7810faa7"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_tblMovie_Id");

                    b.HasIndex("DirectorId");

                    b.HasIndex("FormatId");

                    b.HasIndex("RatingId");

                    b.ToTable("tblMovie", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2c1073c4-d98a-4929-8541-77e619e9e48f"),
                            Cost = 6.9900000000000002,
                            Description = "Rocky is a 1976 American sports drama film directed by John G. Avildsen, written by and starring Sylvester Stallone.",
                            DirectorId = new Guid("886dc06f-dc36-4aad-a81a-a474e6dc47bd"),
                            FormatId = new Guid("a231d4ba-102d-4bc0-a608-d90e8bf74a82"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("728fa8da-22f3-4311-9098-9dfc103eb341"),
                            Title = "Rocky"
                        },
                        new
                        {
                            Id = new Guid("913cd5df-2225-4bca-a9da-43ff1e42f7f1"),
                            Cost = 6.9900000000000002,
                            Description = "Other",
                            DirectorId = new Guid("886dc06f-dc36-4aad-a81a-a474e6dc47bd"),
                            FormatId = new Guid("a231d4ba-102d-4bc0-a608-d90e8bf74a82"),
                            ImagePath = "Rocky.jpg",
                            Quantity = 2,
                            RatingId = new Guid("728fa8da-22f3-4311-9098-9dfc103eb341"),
                            Title = "Other"
                        },
                        new
                        {
                            Id = new Guid("3440a337-f353-42d7-8227-81a7e2737925"),
                            Cost = 8.9900000000000002,
                            Description = "Jaws is a 1975 American thriller film directed by Steven Spielberg and based on the Peter Benchley 1974 novel of the same name.",
                            DirectorId = new Guid("4c090eef-2e71-4986-aafd-8313d208c581"),
                            FormatId = new Guid("b5a83b31-05dd-47ee-9bd1-2f1574cd2120"),
                            ImagePath = "Jaws1.jpg",
                            Quantity = 1,
                            RatingId = new Guid("ec4fbee8-88cf-4eb4-a8df-3ba87c61ed12"),
                            Title = "Jaws"
                        },
                        new
                        {
                            Id = new Guid("4bbb3600-4df7-4cfc-a9b0-28bb16cfbc37"),
                            Cost = 12.5,
                            Description = "The Princess Bride is a 1987 American fantasy adventure comedy film directed and co-produced by Rob Reiner, starring Cary Elwes, Robin Wright, Mandy Patinkin, Chris Sarandon, Wallace Shawn, André the Giant, and Christopher Guest.",
                            DirectorId = new Guid("983cd154-bbb4-4b74-94ae-c167b0ab2128"),
                            FormatId = new Guid("f17f9043-d5d6-4618-88f9-ad9b48549f9f"),
                            ImagePath = "PrincessBride.jpg",
                            Quantity = 4,
                            RatingId = new Guid("ef99cf54-ede2-4e04-b402-1ac94d841050"),
                            Title = "The Princess Bride"
                        },
                        new
                        {
                            Id = new Guid("54ee857e-f175-4649-b3f8-5f0c226aed95"),
                            Cost = 10.5,
                            Description = "Indiana Jones and the Last Crusade is a 1989 American action-adventure film directed by Steven Spielberg, from a story co-written by executive producer George Lucas.",
                            DirectorId = new Guid("fca5d738-a87f-432a-a95b-d5e968073b79"),
                            FormatId = new Guid("f17f9043-d5d6-4618-88f9-ad9b48549f9f"),
                            ImagePath = "IndianaJonesLastCrusade.jpg",
                            Quantity = 2,
                            RatingId = new Guid("f42296df-7d7d-40eb-bd63-b46dfff1681f"),
                            Title = "Indiana Jones and the Last Crusade"
                        },
                        new
                        {
                            Id = new Guid("1f7c68d3-8a65-41ea-99e9-5c4f6bada051"),
                            Cost = 7.5,
                            Description = "Star Wars: Episode IV – A New Hope is a 1977 American epic space-opera film written and directed by George Lucas, produced by Lucasfilm and distributed by 20th Century Fox.",
                            DirectorId = new Guid("4c090eef-2e71-4986-aafd-8313d208c581"),
                            FormatId = new Guid("b5a83b31-05dd-47ee-9bd1-2f1574cd2120"),
                            ImagePath = "StarWarsNewHope.jpg",
                            Quantity = 1,
                            RatingId = new Guid("ec4fbee8-88cf-4eb4-a8df-3ba87c61ed12"),
                            Title = "Star Wars: Episode IV – A New Hope"
                        },
                        new
                        {
                            Id = new Guid("16e596d1-3a51-409f-ab32-56d000fba06c"),
                            Cost = 9.9900000000000002,
                            Description = "Pale Rider is a 1985 American Western film produced and directed by Clint Eastwood, who also stars in the lead role.",
                            DirectorId = new Guid("4c090eef-2e71-4986-aafd-8313d208c581"),
                            FormatId = new Guid("b5a83b31-05dd-47ee-9bd1-2f1574cd2120"),
                            ImagePath = "PaleRider.jpg",
                            Quantity = 1,
                            RatingId = new Guid("ec4fbee8-88cf-4eb4-a8df-3ba87c61ed12"),
                            Title = "Pale Rider"
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblMovieGenre_Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblMovieGenre", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("00be876e-e1ea-41a2-aa94-0063a3647aae"),
                            GenreId = new Guid("31e9baf7-adfa-4b1d-865d-0ff6bff4fbbb"),
                            MovieId = new Guid("2c1073c4-d98a-4929-8541-77e619e9e48f")
                        },
                        new
                        {
                            Id = new Guid("81726d03-bc2d-4db3-a68d-893dd08ea314"),
                            GenreId = new Guid("179e337f-afa9-44dc-8322-44a76c2ce106"),
                            MovieId = new Guid("2c1073c4-d98a-4929-8541-77e619e9e48f")
                        },
                        new
                        {
                            Id = new Guid("8ec9ad65-d981-4195-b661-8217b204c46c"),
                            GenreId = new Guid("95c0abd3-6b8b-492c-a395-b9e2bd867415"),
                            MovieId = new Guid("2c1073c4-d98a-4929-8541-77e619e9e48f")
                        },
                        new
                        {
                            Id = new Guid("347bbbd0-baff-4a60-a61c-a795ae140ffc"),
                            GenreId = new Guid("31e9baf7-adfa-4b1d-865d-0ff6bff4fbbb"),
                            MovieId = new Guid("3440a337-f353-42d7-8227-81a7e2737925")
                        },
                        new
                        {
                            Id = new Guid("d0949c45-2d11-498f-9136-38441cc4e1d8"),
                            GenreId = new Guid("179e337f-afa9-44dc-8322-44a76c2ce106"),
                            MovieId = new Guid("3440a337-f353-42d7-8227-81a7e2737925")
                        },
                        new
                        {
                            Id = new Guid("02082e9c-a000-4d79-86ca-19e6f6dccd80"),
                            GenreId = new Guid("67c6a687-292d-4502-8369-4ece917e3877"),
                            MovieId = new Guid("4bbb3600-4df7-4cfc-a9b0-28bb16cfbc37")
                        },
                        new
                        {
                            Id = new Guid("20c9d141-06b3-45f4-a0e3-490c3baf0a32"),
                            GenreId = new Guid("73fc274f-826b-4668-9070-09ef9d9afd78"),
                            MovieId = new Guid("4bbb3600-4df7-4cfc-a9b0-28bb16cfbc37")
                        },
                        new
                        {
                            Id = new Guid("a7106034-cf06-4990-b6b8-866a325de216"),
                            GenreId = new Guid("95c0abd3-6b8b-492c-a395-b9e2bd867415"),
                            MovieId = new Guid("4bbb3600-4df7-4cfc-a9b0-28bb16cfbc37")
                        },
                        new
                        {
                            Id = new Guid("5164eedf-858e-43b0-9834-429e565b84cd"),
                            GenreId = new Guid("179e337f-afa9-44dc-8322-44a76c2ce106"),
                            MovieId = new Guid("54ee857e-f175-4649-b3f8-5f0c226aed95")
                        },
                        new
                        {
                            Id = new Guid("b64abd3c-8f26-4629-ac14-c9eda6e1a02b"),
                            GenreId = new Guid("95c0abd3-6b8b-492c-a395-b9e2bd867415"),
                            MovieId = new Guid("54ee857e-f175-4649-b3f8-5f0c226aed95")
                        },
                        new
                        {
                            Id = new Guid("4f1b6f91-2b68-44f2-9bb8-06c29f272700"),
                            GenreId = new Guid("179e337f-afa9-44dc-8322-44a76c2ce106"),
                            MovieId = new Guid("1f7c68d3-8a65-41ea-99e9-5c4f6bada051")
                        },
                        new
                        {
                            Id = new Guid("2c706ef2-46b1-4b95-b1d7-446947ce33f4"),
                            GenreId = new Guid("ae2ce9c8-3a7c-4985-86d0-c68d5b86e630"),
                            MovieId = new Guid("1f7c68d3-8a65-41ea-99e9-5c4f6bada051")
                        },
                        new
                        {
                            Id = new Guid("f5d44f1c-f0f6-4cc7-bddc-dd1c549939ee"),
                            GenreId = new Guid("a9893ca8-7f18-42cb-8ef0-2c2f8308ecf4"),
                            MovieId = new Guid("16e596d1-3a51-409f-ab32-56d000fba06c")
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK_tblOrder_Id");

                    b.ToTable("tblOrder", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("af6d8837-bd7b-4457-a6d8-d8c171be76ea"),
                            CustomerId = new Guid("c919a719-b175-40a0-95c3-b9a965dfbc0a"),
                            OrderDate = new DateTime(2017, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2017, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("ad65c547-7df1-4085-97d1-c9c3327d608d")
                        },
                        new
                        {
                            Id = new Guid("5c6df3cd-350a-4464-9567-d54d5044c998"),
                            CustomerId = new Guid("8abb067e-6b0f-409c-8e08-f5d8b5354c80"),
                            OrderDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2021, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("ad65c547-7df1-4085-97d1-c9c3327d608d")
                        },
                        new
                        {
                            Id = new Guid("25ec747b-5277-4af3-870f-000e1da4c38a"),
                            CustomerId = new Guid("8abb067e-6b0f-409c-8e08-f5d8b5354c80"),
                            OrderDate = new DateTime(2022, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ShipDate = new DateTime(2022, 10, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = new Guid("d85b818c-1be6-4be1-b925-d9af249d83bf")
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblOrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_tblOrderItem_Id");

                    b.ToTable("tblOrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b1e6aeea-5d8f-4fc8-9bc8-a79a603f0b30"),
                            Cost = 8.9900000000000002,
                            MovieId = new Guid("2c1073c4-d98a-4929-8541-77e619e9e48f"),
                            OrderId = new Guid("af6d8837-bd7b-4457-a6d8-d8c171be76ea"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("e006bdfe-712e-4464-9443-323f9b01eb36"),
                            Cost = 9.9900000000000002,
                            MovieId = new Guid("3440a337-f353-42d7-8227-81a7e2737925"),
                            OrderId = new Guid("af6d8837-bd7b-4457-a6d8-d8c171be76ea"),
                            Quantity = 0
                        },
                        new
                        {
                            Id = new Guid("b00da67b-cbac-4ef6-8ba2-86856e45edd6"),
                            Cost = 10.99,
                            MovieId = new Guid("3440a337-f353-42d7-8227-81a7e2737925"),
                            OrderId = new Guid("5c6df3cd-350a-4464-9567-d54d5044c998"),
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_tblRating_Id");

                    b.ToTable("tblRating", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("728fa8da-22f3-4311-9098-9dfc103eb341"),
                            Description = "G"
                        },
                        new
                        {
                            Id = new Guid("ec4fbee8-88cf-4eb4-a8df-3ba87c61ed12"),
                            Description = "PG-13"
                        },
                        new
                        {
                            Id = new Guid("ef99cf54-ede2-4e04-b402-1ac94d841050"),
                            Description = "PG"
                        },
                        new
                        {
                            Id = new Guid("f42296df-7d7d-40eb-bd63-b46dfff1681f"),
                            Description = "R"
                        },
                        new
                        {
                            Id = new Guid("60d883fb-bb1e-4f17-bafd-8f2a0f13522c"),
                            Description = "Other"
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(28)
                        .IsUnicode(false)
                        .HasColumnType("varchar(28)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id")
                        .HasName("PK_tblUser_Id");

                    b.ToTable("tblUser", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d199bf78-3bb3-40dd-8f6d-06d6bdc5b404"),
                            FirstName = "Steve",
                            LastName = "Marin",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "smarin"
                        },
                        new
                        {
                            Id = new Guid("ad65c547-7df1-4085-97d1-c9c3327d608d"),
                            FirstName = "John",
                            LastName = "Doro",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "jdoro"
                        },
                        new
                        {
                            Id = new Guid("d85b818c-1be6-4be1-b925-d9af249d83bf"),
                            FirstName = "Brian",
                            LastName = "Foote",
                            Password = "pYfdnNb8sO0FgS4H0MRSwLGOIME=",
                            UserName = "bfoote"
                        });
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblCart", b =>
                {
                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblCartItem", b =>
                {
                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblCart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblDirector", "Director")
                        .WithMany("tblMovies")
                        .HasForeignKey("DirectorId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_DirectorId");

                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblFormat", "Format")
                        .WithMany("tblMovies")
                        .HasForeignKey("FormatId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_FormatId");

                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblRating", "Rating")
                        .WithMany("tblMovies")
                        .HasForeignKey("RatingId")
                        .IsRequired()
                        .HasConstraintName("fk_tblMovie_RatingId");

                    b.Navigation("Director");

                    b.Navigation("Format");

                    b.Navigation("Rating");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblMovieGenre", b =>
                {
                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblGenre", "Genre")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_GenreId");

                    b.HasOne("DDB.DVDCentral.PL2.Entities.tblMovie", "Movie")
                        .WithMany("tblMovieGenres")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("tblMovieGenre_MovieId");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblDirector", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblFormat", b =>
                {
                    b.Navigation("tblMovies");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblGenre", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblMovie", b =>
                {
                    b.Navigation("tblMovieGenres");
                });

            modelBuilder.Entity("DDB.DVDCentral.PL2.Entities.tblRating", b =>
                {
                    b.Navigation("tblMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
